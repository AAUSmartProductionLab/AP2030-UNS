<?xml version="1.0" encoding="UTF-8"?>
<root BTCPP_format="4">
  <BehaviorTree ID="Filling">
    <Sequence>
      <FillingRegistration/>
      <MoveShuttle TargetPosition="2"/>
      <RetryUntilSuccessful num_attempts="5">
        <Fallback>
          <GenericConditionNode expected_value="2.0"
                                comparison_type="equal"
                                field_name="Weight"/>
          <Dispense/>
        </Fallback>
      </RetryUntilSuccessful>
    </Sequence>
  </BehaviorTree>

  <BehaviorTree ID="MainTree">
    <Parallel failure_count="1"
              success_count="-1">
      <SubTree ID="Produce"
               XbotId="1"
               _autoremap="true"/>
    </Parallel>
  </BehaviorTree>

  <BehaviorTree ID="Produce">
    <Sequence>
      <MoveShuttle TargetPosition="1"/>
      <SubTree ID="Filling"
               _autoremap="true"/>
      <SubTree ID="Stoppering"
               _autoremap="true"/>
      <MoveShuttle TargetPosition="4"/>
    </Sequence>
  </BehaviorTree>

  <BehaviorTree ID="Stoppering">
    <Sequence>
      <StopperRegistration/>
      <MoveShuttle TargetPosition="3"/>
      <Stopper/>
    </Sequence>
  </BehaviorTree>

  <!-- Description of Node Models (used by Groot) -->
  <TreeNodesModel>
    <Action ID="Dispense"/>
    <Action ID="FillingRegistration"/>
    <Condition ID="GenericConditionNode">
      <input_port name="expected_value"
                  type="std::string">Value to compare against</input_port>
      <input_port name="comparison_type"
                  type="std::string">Type of comparison: equal, not_equal, greater, less, contains</input_port>
      <input_port name="field_name"
                  type="std::string">Name of the field to monitor in the MQTT message</input_port>
    </Condition>
    <Action ID="MoveShuttle">
      <input_port name="TargetPosition"
                  type="int"/>
    </Action>
    <Action ID="Stopper"/>
    <Action ID="StopperRegistration"/>
  </TreeNodesModel>

</root>
