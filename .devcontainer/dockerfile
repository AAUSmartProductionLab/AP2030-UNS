# Build stage
FROM mcr.microsoft.com/devcontainers/base:jammy AS builder

ENV DEBIAN_FRONTEND=noninteractive

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    make \
    git \
    gcc \
    libssl-dev \
    python3-pip \
    python3-venv \
    pkg-config \
    uuid-dev \
    wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Setup Python environment
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install --no-cache-dir paho-mqtt jsonschema conan

# Build Paho MQTT C++
WORKDIR /src
RUN git clone https://github.com/eclipse-paho/paho.mqtt.cpp.git && \
    cd paho.mqtt.cpp && \
    git checkout v1.5.2 && \
    git submodule update --init && \
    cmake -Bbuild -H. -DPAHO_WITH_MQTT_C=ON -DPAHO_BUILD_EXAMPLES=ON && \
    cmake --build build/ --target install && \
    ldconfig

# Build BehaviorTree.CPP
RUN git clone https://github.com/BehaviorTree/BehaviorTree.CPP.git && \
    cd BehaviorTree.CPP && \
    conan profile detect && \
    mkdir build && cd build && \
    conan install .. --output-folder=. --build=missing && \
    cmake .. -DCMAKE_TOOLCHAIN_FILE="conan_toolchain.cmake" && \
    cmake --build . --parallel && \
    make install

# Download and extract Groot2
RUN wget https://s3.us-west-1.amazonaws.com/download.behaviortree.dev/groot2_linux_installer/Groot2-v1.6.1-x86_64.AppImage && \
    chmod +x Groot2-v1.6.1-x86_64.AppImage && \
    ./Groot2-v1.6.1-x86_64.AppImage --appimage-extract && \
    mkdir -p /opt/groot && \
    mv squashfs-root/* /opt/groot/

# Final stage
FROM mcr.microsoft.com/devcontainers/base:jammy

ENV DEBIAN_FRONTEND=noninteractive

# Install runtime dependencies and minimal dev tools
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    make \
    git \
    gcc \
    libssl-dev \
    python3-pip \
    python3-venv \
    sudo \
    pkg-config \
    uuid-dev \
    libfmt-dev \
    # Groot2 dependencies - add missing OpenGL libraries
    libglvnd0 libgl1 libglx0 libegl1 libxkbcommon0 libxcomposite1 \
    libxcursor1 libxdamage1 libxfixes3 libxi6 libxrandr2 libxtst6 libfontconfig1 \
    libopengl0 libglu1 mesa-utils \
    libyaml-cpp-dev ffmpeg libsm6 libxext6 \
    gdb \
    gdbserver \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Setup Python environment in final image
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install --no-cache-dir paho-mqtt jsonschema conan numpy opencv-python pillow
# Copy installed libraries from builder
COPY --from=builder /usr/local/lib/ /usr/local/lib/
COPY --from=builder /usr/local/include/ /usr/local/include/
COPY --from=builder /usr/local/share/ /usr/local/share/
COPY --from=builder /opt/groot/ /opt/groot/
RUN ldconfig

# Create groot2 script that runs the executable directly
RUN echo '#!/bin/bash' > /usr/local/bin/groot2 && \
    echo 'cd /opt/groot && ./AppRun "$@"' >> /usr/local/bin/groot2 && \
    chmod +x /usr/local/bin/groot2

# Set working directory
WORKDIR /workspaces