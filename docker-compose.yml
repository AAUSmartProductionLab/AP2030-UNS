services:
  
  hivemq-broker:
    image: hivemq/hivemq4:latest
    container_name: hivemq-broker
    volumes:
      - ./HiveMQ/conf:/opt/hivemq/conf
      - ./HiveMQ/extensions:/opt/hivemq/extensions
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "8080:8080"
      - "8883:8883"
      - "8884:8884"
      - "8091:8081"
      - "8000:8000"
    networks:
      - hivemq-network

  frontend:
    build:
      context: ./Configurator
      dockerfile: Dockerfile.frontend
    ports:
      - "5173:5173"
    volumes:
      - ./Configurator:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - hivemq-network
    depends_on:
      - hivemq-broker
    restart: unless-stopped
    
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    volumes:
      # - ./TimescaleDB/timescaledb-data:/var/lib/postgresql/data
      - ./TimescaleDB/database/init-scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=admin
      - POSTGRES_DB=uns_data
    ports:
      - "5432:5432"
    networks:
      - hivemq-network
    restart: unless-stopped
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./Grafana/grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PLUGINS_PREINSTALL=grafana-clock-panel,grafana-simple-json-datasource, volkovlabs-image-panel
    ports:
      - "3000:3000"
    networks:
      - hivemq-network
    depends_on:
      - timescaledb
    restart: unless-stopped
 
  groot:
    build:
      context: ./Groot2
      dockerfile: groot2.dockerfile
    container_name: groot2-web
    volumes:
      - ./BT_Controller/config/bt_description:/bt_description
      - ./offlineResponse_1656FB-A61627-4A4CB2-F0C0CA-8531ED-BD332C.dat:/bt_description/offlineResponse_1656FB-A61627-4A4CB2-F0C0CA-8531ED-BD332C.dat
    ports:
      - "6080:6080"
    networks:
      - hivemq-network
    restart: unless-stopped

  mqtt-explorer:
    image: smeagolworms4/mqtt-explorer
    container_name: mqtt-explorer
    volumes:
      - ./MQTT-Explorer/config:/mqtt-explorer/config
    ports:
      - "4000:4000"
    environment:
      - HTTP_PORT=4000
      - CONFIG_PATH=/mqtt-explorer/config
    networks:
      - hivemq-network
    depends_on:
      - hivemq-broker
    restart: unless-stopped
    
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./Portainer/data:/data
    ports:
      - "9000:9000"
    networks:
      - hivemq-network
    restart: unless-stopped

  bt_controller:
    build:
      context: .
      dockerfile: BT_Controller/dockerfile
    container_name: bt_controller
    volumes:
      - ./BT_Controller/config:/AP2030-UNS/BT_Controller/config
      - ./schemas:/AP2030-UNS/schemas
    ports:
    - "1667:1667"
    networks:
      - hivemq-network
    depends_on:
      - hivemq-broker


  filling_station:
    extends:
      file: ./PackML_Stations/stations-compose.yml
      service: filling_station
    networks:
      - hivemq-network
    depends_on:
      - hivemq-broker

  # camera_station:
  #   extends:
  #     file: ./PackML_Stations/stations-compose.yml
  #     service: camera_station
  #   networks:
  #     - hivemq-network
  #   depends_on:
  #     - hivemq-broker
      
  stoppering_station:
    extends:
      file: ./PackML_Stations/stations-compose.yml
      service: stoppering_station
    networks:
      - hivemq-network
    depends_on:
      - hivemq-broker

  load_station:
    extends:
      file: ./PackML_Stations/stations-compose.yml
      service: load_station
    networks:
      - hivemq-network
    depends_on:
      - hivemq-broker

  unload_station:
    extends:
      file: ./PackML_Stations/stations-compose.yml
      service: unload_station
    networks:
      - hivemq-network
    depends_on:
      - hivemq-broker



################################### BASYX CONTAINERS ####################################
  aas-env:
    image: eclipsebasyx/aas-environment:2.0.0-SNAPSHOT
    container_name: aas-env
    environment:
      - SERVER_PORT=8081
    volumes:
      - ./aas:/application/aas
      - ./basyx/aas-env.properties:/application/application.properties
    ports:
      - '8081:8081'
    restart: always
    depends_on:
      aas-registry:
        condition: service_healthy
      sm-registry:
        condition: service_healthy
      mongo:
        condition: service_healthy
      hivemq-broker:
        condition: service_started
    networks:
      - hivemq-network
  aas-registry:
    image: eclipsebasyx/aas-registry-log-mongodb:2.0.0-SNAPSHOT
    container_name: aas-registry
    ports:
      - '8082:8080'
    environment:
      - SERVER_PORT=8080
    volumes:
      - ./basyx/aas-registry.yml:/workspace/config/application.yml
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - hivemq-network
  sm-registry:
    image: eclipsebasyx/submodel-registry-log-mongodb:2.0.0-SNAPSHOT
    container_name: sm-registry
    ports:
      - '8083:8080'
    environment:
      - SERVER_PORT=8080
    volumes:
      - ./basyx/sm-registry.yml:/workspace/config/application.yml
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - hivemq-network
  aas-discovery:
    image: eclipsebasyx/aas-discovery:2.0.0-SNAPSHOT
    container_name: aas-discovery
    environment:
      - SERVER_PORT=8081
    volumes:
      - ./basyx/aas-discovery.properties:/application/application.properties
    ports:
      - '8084:8081'
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - hivemq-network
  mongo:
    image: mongo:5.0.10
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoAdmin
      MONGO_INITDB_ROOT_PASSWORD: mongoPassword
    restart: always
    healthcheck:
      test: mongo
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hivemq-network
  aas-web-ui:
    image: eclipsebasyx/aas-gui:SNAPSHOT
    container_name: aas-ui
    ports:
      - '3001:3000'
    environment:
      AAS_REGISTRY_PATH: http://192.168.0.104:8082/shell-descriptors
      SUBMODEL_REGISTRY_PATH: http://192.168.0.104:8083/submodel-descriptors
      AAS_REPO_PATH: http://192.168.0.104:8081/shells
      SUBMODEL_REPO_PATH: http://192.168.0.104:8081/submodels
      CD_REPO_PATH: http://192.168.0.104:8081/concept-descriptions
      AAS_DISCOVERY_PATH: http://192.168.0.104:8084/lookup/shells
      PRIMARY_COLOR: '#0036AA'
      DASHBOARD_SERVICE_PATH: http://192.168.0.104:8085/api/elements
    restart: always
    depends_on:
      aas-env:
        condition: service_started
    networks:
      - hivemq-network 
  dashboard-api:
    image: aaronzi/basyx-dashboard-api:SNAPSHOT_02
    container_name: dashboard-api
    ports:
      - '8085:8085'
    volumes:
      - ./basyx/aas-dashboard.yml:/application.yml
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - hivemq-network

#################Â¤ NETWORKS AND VOLUMES ####################
networks:
  hivemq-network:
    driver: bridge

# volumes:
#   timescaledb-data:
#   grafana-data: