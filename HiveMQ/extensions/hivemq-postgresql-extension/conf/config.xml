<hivemq-postgresql-extension xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                             xsi:noNamespaceSchemaLocation="config.xsd">
    <postgresqls>
        <postgresql>
            <id>order-data-postgresql</id>
            <host>timescaledb</host>
            <port>5432</port>
            <database>uns_data</database>
            <username>admin</username>
            <password>admin</password>
        </postgresql>
    </postgresqls>
    <mqtt-to-postgresql-routes>
        <mqtt-to-postgresql-route>
            <id>order-data-template-route</id>
            <postgresql-id>order-data-postgresql</postgresql-id>
            <mqtt-topic-filters>
                <mqtt-topic-filter>NN/Nybrovej/InnoLab/Configuration/DATA/Order</mqtt-topic-filter>
            </mqtt-topic-filters>
            <processor>
                <statement-template>sql-template-statements/orders/order-data-insert.sql</statement-template>
            </processor>
        </mqtt-to-postgresql-route>
        <mqtt-to-postgresql-route>
            <id>planar-system-state-route</id>
            <postgresql-id>order-data-postgresql</postgresql-id>
            <mqtt-topic-filters>
                <mqtt-topic-filter>NN/Nybrovej/InnoLab/Planar/DATA/State</mqtt-topic-filter>
            </mqtt-topic-filters>
            <processor>
                <statement-template>sql-template-statements/planar/planar-state-insert.sql</statement-template>
            </processor>
        </mqtt-to-postgresql-route>
        <mqtt-to-postgresql-route>
            <id>order-done-template-route</id>
            <postgresql-id>order-data-postgresql</postgresql-id>
            <mqtt-topic-filters>
                <mqtt-topic-filter>NN/Nybrovej/InnoLab/Configuration/CMD/Order/Done</mqtt-topic-filter>
            </mqtt-topic-filters>
            <processor>
                <statement-template>sql-template-statements/orders/order-done-insert.sql</statement-template>
            </processor>
        </mqtt-to-postgresql-route>
        <mqtt-to-postgresql-route>
            <id>order-ack-template-route</id>
            <postgresql-id>order-data-postgresql</postgresql-id>
            <mqtt-topic-filters>
                <mqtt-topic-filter>NN/Nybrovej/InnoLab/Configuration/CMD/Order/Acknowledge</mqtt-topic-filter>
            </mqtt-topic-filters>
            <processor>
                <statement-template>sql-template-statements/orders/order-ack-insert.sql</statement-template>
            </processor>
        </mqtt-to-postgresql-route>
        <mqtt-to-postgresql-route>
            <id>xbot-state-route</id>
            <postgresql-id>order-data-postgresql</postgresql-id>
            <mqtt-topic-filters>
                <mqtt-topic-filter>NN/Nybrovej/InnoLab/Planar/+/DATA/State</mqtt-topic-filter>
            </mqtt-topic-filters>
            <processor>
                <statement-template>sql-template-statements/planar/xbot-state-insert.sql</statement-template>
            </processor>
        </mqtt-to-postgresql-route>
        <mqtt-to-postgresql-route>
            <id>station-configurations-route</id>
            <postgresql-id>order-data-postgresql</postgresql-id> <!-- Use your relevant postgresql-id -->
            <mqtt-topic-filters>
                <mqtt-topic-filter>NN/Nybrovej/InnoLab/Configuration/DATA/Planar/Stations</mqtt-topic-filter>
            </mqtt-topic-filters>
            <processor>
                <statement-template>sql-template-statements/config/station-configurations-log-insert.sql</statement-template>
            </processor>
        </mqtt-to-postgresql-route>
        <mqtt-to-postgresql-route>
            <id>planar-limits-config-route</id>
            <postgresql-id>order-data-postgresql</postgresql-id> <!-- Ensure this matches your <postgresql-id> -->
            <mqtt-topic-filters>
                <mqtt-topic-filter>NN/Nybrovej/InnoLab/Configuration/DATA/Planar/Limits</mqtt-topic-filter>
            </mqtt-topic-filters>
            <processor>
                <statement-template>sql-template-statements/config/limit-configurations-log-insert.sql</statement-template>
            </processor>
        </mqtt-to-postgresql-route>
        <mqtt-to-postgresql-route>
            <id>filling-state-route</id>
            <postgresql-id>order-data-postgresql</postgresql-id>
            <mqtt-topic-filters>
                <mqtt-topic-filter>NN/Nybrovej/InnoLab/Filling/DATA/State</mqtt-topic-filter>
            </mqtt-topic-filters>
            <processor> 
                <statement-template>sql-template-statements/stations/filling-state-insert.sql</statement-template>
            </processor>
        </mqtt-to-postgresql-route>
        <mqtt-to-postgresql-route>
            <id>filling-weight-route</id>
            <postgresql-id>order-data-postgresql</postgresql-id>
            <mqtt-topic-filters>
                <mqtt-topic-filter>NN/Nybrovej/InnoLab/Filling/DATA/Weight</mqtt-topic-filter>
            </mqtt-topic-filters>
            <processor> 
                <statement-template>sql-template-statements/stations/filling-weight-insert.sql</statement-template>
            </processor>
        </mqtt-to-postgresql-route>
        <mqtt-to-postgresql-route>
            <id>stoppering-state-route</id>
            <postgresql-id>order-data-postgresql</postgresql-id>
            <mqtt-topic-filters>
                <mqtt-topic-filter>NN/Nybrovej/InnoLab/Stoppering/DATA/State</mqtt-topic-filter>
            </mqtt-topic-filters>
            <processor> 
                <statement-template>sql-template-statements/stations/stoppering-state-insert.sql</statement-template>
            </processor>
        </mqtt-to-postgresql-route>
        <mqtt-to-postgresql-route>
            <id>camera-state-route</id>
            <postgresql-id>order-data-postgresql</postgresql-id>
            <mqtt-topic-filters>
                <mqtt-topic-filter>NN/Nybrovej/InnoLab/Camera/DATA/State</mqtt-topic-filter>
            </mqtt-topic-filters>
            <processor> 
                <statement-template>sql-template-statements/stations/camera-state-insert.sql</statement-template>
            </processor>
        </mqtt-to-postgresql-route>
        <mqtt-to-postgresql-route>
            <id>unload-state-route</id>
            <postgresql-id>order-data-postgresql</postgresql-id>
            <mqtt-topic-filters>
                <mqtt-topic-filter>NN/Nybrovej/InnoLab/Unload/DATA/State</mqtt-topic-filter>
            </mqtt-topic-filters>
            <processor> 
                <statement-template>sql-template-statements/stations/unload-state-insert.sql</statement-template>
            </processor>
        </mqtt-to-postgresql-route>
        <mqtt-to-postgresql-route>
            <id>load-state-route</id>
            <postgresql-id>order-data-postgresql</postgresql-id>
            <mqtt-topic-filters>
                <mqtt-topic-filter>NN/Nybrovej/InnoLab/Load/DATA/State</mqtt-topic-filter>
            </mqtt-topic-filters>
            <processor> 
                <statement-template>sql-template-statements/stations/load-state-insert.sql</statement-template>
            </processor>
        </mqtt-to-postgresql-route>
        <mqtt-to-postgresql-route>
            <id>controller-state-route</id>
            <postgresql-id>order-data-postgresql</postgresql-id>
            <mqtt-topic-filters>
                <mqtt-topic-filter>NN/Nybrovej/InnoLab/bt_controller/DATA/State</mqtt-topic-filter>
            </mqtt-topic-filters>
            <processor> 
                <statement-template>sql-template-statements/controller/state-insert.sql</statement-template>
            </processor>
        </mqtt-to-postgresql-route>
    </mqtt-to-postgresql-routes>


</hivemq-postgresql-extension>